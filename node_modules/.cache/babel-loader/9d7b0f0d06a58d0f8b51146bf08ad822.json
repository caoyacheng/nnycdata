{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/cyc-mac/Desktop/JSAPI_React/src/MapContainer.js\";\nimport React, { Component } from 'react';\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport './MapContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MapComponent extends Component {\n  constructor() {\n    super();\n    // this.state = {\n    //     map:{}\n    // };       \n    this.map = {};\n  }\n  // 2.dom渲染成功后进行map对象的创建\n  componentDidMount() {\n    AMapLoader.load({\n      key: '03ca83e8383c78db43dcc12c2eec3e29',\n      //需要设置您申请的key\n      version: \"2.0\",\n      plugins: ['AMap.ToolBar', 'AMap.Driving'],\n      AMapUI: {\n        version: \"1.1\",\n        plugins: []\n      },\n      Loca: {\n        version: \"2.0.0\"\n      }\n    }).then(AMap => {\n      this.map = new AMap.Map(\"mapcontainer\", {\n        viewMode: \"3D\",\n        zoom: 15,\n        zooms: [2, 22],\n        pitch: 55,\n        center: [108.336646, 22.813143]\n      });\n      let positionArr = [[113.357224, 34.977186], [114.555528, 37.727903], [112.106257, 36.962733], [109.830097, 31.859027], [116.449181, 39.98614]];\n      for (let item of positionArr) {\n        let marker = new AMap.Marker({\n          position: [item[0], item[1]]\n        });\n        this.map.add(marker);\n      }\n\n      //添加烟草区域\n      const pathArr = [[[[108.336389, 22.812905], [108.347375, 22.812826], [108.355271, 22.812193], [108.349692, 22.807446], [108.339135, 22.801591], [108.33656, 22.80618], [108.336389, 22.812905]]]];\n      const polygon = new AMap.Polygon({\n        path: pathArr,\n        //多边形路径\n        fillColor: \"#E75030\",\n        //多边形填充颜色\n        strokeOpacity: 1,\n        //线条透明度\n        fillOpacity: 0.5,\n        //填充透明度\n        strokeColor: \"#2b8cbe\",\n        //线条颜色\n        strokeWeight: 1,\n        //线条宽度\n        strokeStyle: \"dashed\",\n        //线样式\n        strokeDasharray: [5, 5] //轮廓的虚线和间隙的样式\n      });\n      this.map.add(polygon);\n\n      //叠加热力图\n      // loca热力图\n      const Loca = window.Loca;\n      this.loca = new Loca.Container({\n        map: this.map\n      });\n\n      //创建棱柱图层\n      var pl = new Loca.PrismLayer({\n        zIndex: 10,\n        opacity: 1,\n        visible: false,\n        hasSide: true\n      });\n\n      //创建数据源\n      var geo = new Loca.geoJSONSource({\n        url: './example.geojson'\n      });\n\n      // 图层添加数据\n      pl.setSource(geo);\n      this.loca.add(pl);\n\n      // 创建圆点图层\n      var pointLayer = new Loca.PointLayer({\n        zIndex: 10,\n        opacity: 1,\n        visible: true,\n        blend: 'lighter'\n      });\n      // 创建数据源\n      var dataSource = new Loca.GeoJSONSource({\n        // url: 'xxx.geojson', 或者使用 data 字段\n        data: {\n          \"type\": \"FeatureCollection\",\n          \"features\": [{\n            \"type\": \"Feature\",\n            \"properties\": {},\n            \"geometry\": {\n              \"type\": \"Point\",\n              \"coordinates\": [108.342704, 22.809005]\n            }\n          }]\n        }\n      });\n      // 图层添加数据\n      pointLayer.setSource(dataSource);\n      // 设置样式\n      pointLayer.setStyle({\n        radius: 30,\n        color: 'red',\n        borderWidth: 10,\n        borderColor: '#fff',\n        unit: 'px'\n      });\n      // 添加到地图上\n      this.loca.add(pointLayer);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n  render() {\n    // 1.创建地图容器\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u5357\\u5B81\\u70DF\\u8349\\u533A\\u57DF\\u9500\\u552E\\u60C5\\u51B5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mapcontainer\",\n        className: \"map\",\n        style: {\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["_jsxFileName","React","Component","AMapLoader","jsxDEV","_jsxDEV","MapComponent","constructor","map","componentDidMount","load","key","version","plugins","AMapUI","Loca","then","AMap","Map","viewMode","zoom","zooms","pitch","center","positionArr","item","marker","Marker","position","add","pathArr","polygon","Polygon","path","fillColor","strokeOpacity","fillOpacity","strokeColor","strokeWeight","strokeStyle","strokeDasharray","window","loca","Container","pl","PrismLayer","zIndex","opacity","visible","hasSide","geo","geoJSONSource","url","setSource","pointLayer","PointLayer","blend","dataSource","GeoJSONSource","data","setStyle","radius","color","borderWidth","borderColor","unit","catch","e","console","log","render","className","children","fileName","lineNumber","columnNumber","id","style","height"],"sources":["/Users/cyc-mac/Desktop/JSAPI_React/src/MapContainer.js"],"sourcesContent":["\"use client\"\nimport React, { Component } from 'react';\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport './MapContainer.css';\n\nclass MapComponent extends Component {\n    constructor() {\n        super();\n        // this.state = {\n        //     map:{}\n        // };       \n        this.map = {};\n\n    }\n    // 2.dom渲染成功后进行map对象的创建\n    componentDidMount() {\n        AMapLoader.load({\n            key: '03ca83e8383c78db43dcc12c2eec3e29', //需要设置您申请的key\n            version: \"2.0\",\n            plugins: ['AMap.ToolBar', 'AMap.Driving'],\n            AMapUI: {\n                version: \"1.1\",\n                plugins: [],\n\n            },\n            Loca: {\n                version: \"2.0.0\"\n            },\n        }).then((AMap) => {\n            this.map = new AMap.Map(\"mapcontainer\", {\n                viewMode: \"3D\",\n                zoom: 15,\n                zooms: [2, 22],\n                pitch: 55,\n                center: [108.336646, 22.813143],\n            });\n            let positionArr = [\n                [113.357224, 34.977186],\n                [114.555528, 37.727903],\n                [112.106257, 36.962733],\n                [109.830097, 31.859027],\n                [116.449181, 39.98614],\n            ];\n            for (let item of positionArr) {\n                let marker = new AMap.Marker({\n                    position: [item[0], item[1]],\n                });\n                this.map.add(marker);\n            }\n\n            //添加烟草区域\n            const pathArr = [\n                [\n                    [\n                        [108.336389, 22.812905],\n                        [108.347375, 22.812826],\n                        [108.355271, 22.812193],\n                        [108.349692, 22.807446],\n                        [108.339135, 22.801591],\n                        [108.33656, 22.80618],\n                        [108.336389, 22.812905],\n                    ],\n                ],\n            ];\n\n            const polygon = new AMap.Polygon({\n                path: pathArr, //多边形路径\n                fillColor: \"#E75030\", //多边形填充颜色\n                strokeOpacity: 1, //线条透明度\n                fillOpacity: 0.5, //填充透明度\n                strokeColor: \"#2b8cbe\", //线条颜色\n                strokeWeight: 1, //线条宽度\n                strokeStyle: \"dashed\", //线样式\n                strokeDasharray: [5, 5], //轮廓的虚线和间隙的样式\n            });\n\n            this.map.add(polygon);\n\n            //叠加热力图\n            // loca热力图\n            const Loca = window.Loca;\n            this.loca = new Loca.Container({\n                map: this.map\n            });\n\n            //创建棱柱图层\n            var pl = new Loca.PrismLayer({\n                zIndex: 10,\n                opacity: 1,\n                visible: false,\n                hasSide: true,\n            });\n\n            //创建数据源\n            var geo = new Loca.geoJSONSource({\n                url: './example.geojson',\n            });\n\n            // 图层添加数据\n            pl.setSource(geo);\n\n            this.loca.add(pl);\n\n\n            // 创建圆点图层\n            var pointLayer = new Loca.PointLayer({\n                zIndex: 10,\n                opacity: 1,\n                visible: true,\n                blend: 'lighter',\n            });\n            // 创建数据源\n            var dataSource = new Loca.GeoJSONSource({\n                // url: 'xxx.geojson', 或者使用 data 字段\n                data: {\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [\n                        {\n                            \"type\": \"Feature\",\n                            \"properties\": {},\n                            \"geometry\": {\n                                \"type\": \"Point\",\n                                \"coordinates\": [\n                                    108.342704, 22.809005\n                                ]\n                            }\n                        }\n                    ]\n                },\n            });\n            // 图层添加数据\n            pointLayer.setSource(dataSource);\n            // 设置样式\n            pointLayer.setStyle({\n                radius: 30,\n                color: 'red',\n                borderWidth: 10,\n                borderColor: '#fff',\n                unit: 'px',\n            })\n            // 添加到地图上\n            this.loca.add(pointLayer);\n\n\n\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n    render() {\n        // 1.创建地图容器\n        return (\n            <div className=\"home_div\">\n                <div className=\"map-title\">\n                    <h3>南宁烟草区域销售情况</h3>\n                </div>\n                <div id=\"mapcontainer\" className=\"map\" style={{ height: '100%' }} />\n            </div>\n        );\n    }\n\n}\nexport default MapComponent;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}