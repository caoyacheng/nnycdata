{"ast":null,"code":"\"use cl\";\n\nvar _jsxFileName = \"/Users/cyc-mac/Desktop/JSAPI_React/src/MapContainer.js\";\nimport React, { Component } from 'react';\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport './MapContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MapComponent extends Component {\n  constructor() {\n    super();\n    // this.state = {\n    //     map:{}\n    // };       \n    this.map = {};\n  }\n  // 2.dom渲染成功后进行map对象的创建\n  componentDidMount() {\n    AMapLoader.load({\n      key: '03ca83e8383c78db43dcc12c2eec3e29',\n      //需要设置您申请的key\n      version: \"2.0\",\n      plugins: ['AMap.ToolBar', 'AMap.Driving', 'AMap.HeatMap'],\n      AMapUI: {\n        version: \"1.1\",\n        plugins: []\n      },\n      Loca: {\n        version: \"2.0.0\"\n      }\n    }).then(AMap => {\n      this.map = new AMap.Map(\"mapcontainer\", {\n        viewMode: \"3D\",\n        zoom: 15,\n        zooms: [2, 22],\n        center: [108.336646, 22.813143]\n      });\n      let positionArr = [[113.357224, 34.977186], [114.555528, 37.727903], [112.106257, 36.962733], [109.830097, 31.859027], [116.449181, 39.98614]];\n      for (let item of positionArr) {\n        let marker = new AMap.Marker({\n          position: [item[0], item[1]]\n        });\n        this.map.add(marker);\n      }\n\n      //添加烟草区域\n      const pathArr = [[[[108.336389, 22.812905], [108.347375, 22.812826], [108.355271, 22.812193], [108.349692, 22.807446], [108.339135, 22.801591], [108.33656, 22.80618], [108.336389, 22.812905]]]];\n      const polygon = new AMap.Polygon({\n        path: pathArr,\n        //多边形路径\n        fillColor: \"#E75030\",\n        //多边形填充颜色\n        strokeOpacity: 1,\n        //线条透明度\n        fillOpacity: 0.5,\n        //填充透明度\n        strokeColor: \"#2b8cbe\",\n        //线条颜色\n        strokeWeight: 1,\n        //线条宽度\n        strokeStyle: \"dashed\",\n        //线样式\n        strokeDasharray: [5, 5] //轮廓的虚线和间隙的样式\n      });\n      this.map.add(polygon);\n\n      //叠加热力图\n\n      var heatmap;\n      var points = [{\n        \"lng\": 108.340429,\n        \"lat\": 22.807936,\n        \"count\": 80\n      }, {\n        \"lng\": 108.34691,\n        \"lat\": 22.80847,\n        \"count\": 90\n      }];\n\n      // 加载热力图插件\n      this.map.plugin([\"AMap.HeatMap\"], function () {\n        // 在地图对象叠加热力图\n        heatmap = new AMap.Heatmap({\n          map: this.map\n        });\n        // 设置热力图数据集\n        heatmap.setDataSet({\n          data: points,\n          max: 100\n        });\n      });\n      heatmap.show();\n      //以下可以在地图上叠加各种图层\n      //const traffic = new AMap.TileLayer.Traffic({\n      //autoRefresh: true, //是否自动刷新，默认为false\n      //interval: 10, //刷新间隔，默认180s\n      //});\n      //this.map.add(traffic); //通过add方法添加图层\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n  render() {\n    // 1.创建地图容器\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u5357\\u5B81\\u70DF\\u8349\\u533A\\u57DF\\u9500\\u552E\\u60C5\\u51B5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mapcontainer\",\n        className: \"map\",\n        style: {\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["_jsxFileName","React","Component","AMapLoader","jsxDEV","_jsxDEV","MapComponent","constructor","map","componentDidMount","load","key","version","plugins","AMapUI","Loca","then","AMap","Map","viewMode","zoom","zooms","center","positionArr","item","marker","Marker","position","add","pathArr","polygon","Polygon","path","fillColor","strokeOpacity","fillOpacity","strokeColor","strokeWeight","strokeStyle","strokeDasharray","heatmap","points","plugin","Heatmap","setDataSet","data","max","show","catch","e","console","log","render","className","children","fileName","lineNumber","columnNumber","id","style","height"],"sources":["/Users/cyc-mac/Desktop/JSAPI_React/src/MapContainer.js"],"sourcesContent":["\"use cl\"\nimport React, { Component } from 'react';\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport './MapContainer.css';\n\nclass  MapComponent extends Component{\n    constructor(){\n        super();\n        // this.state = {\n        //     map:{}\n        // };       \n        this.map ={};\n      \n    }\n    // 2.dom渲染成功后进行map对象的创建\n    componentDidMount(){\n        AMapLoader.load({\n            key:'03ca83e8383c78db43dcc12c2eec3e29', //需要设置您申请的key\n            version:\"2.0\",\n            plugins:['AMap.ToolBar','AMap.Driving','AMap.HeatMap'],\n            AMapUI:{\n                version:\"1.1\",\n                plugins:[],\n\n            },\n            Loca:{\n                version:\"2.0.0\"\n            },\n        }).then((AMap)=>{\n            this.map = new AMap.Map(\"mapcontainer\",{\n                viewMode:\"3D\",\n                zoom:15,\n                zooms:[2,22],\n                center:[108.336646,22.813143],\n            });\n            let positionArr = [\n                [113.357224,34.977186],\n                [114.555528,37.727903],\n                [112.106257,36.962733],\n                [109.830097,31.859027],\n                [116.449181,39.98614],\n            ];\n            for(let item of positionArr){\n                let marker = new AMap.Marker({\n                    position:[item[0],item[1]],\n                });\n                this.map.add(marker);\n            }\n\n            //添加烟草区域\n            const pathArr = [\n                [\n                    [\n                        [108.336389,22.812905],\n                        [108.347375,22.812826],\n                        [108.355271,22.812193],\n                        [108.349692,22.807446],\n                        [108.339135,22.801591],\n                        [108.33656,22.80618],\n                        [108.336389,22.812905],\n                    ],\n                ],\n            ];\n\n            const polygon = new AMap.Polygon({\n                path: pathArr, //多边形路径\n                fillColor: \"#E75030\", //多边形填充颜色\n                strokeOpacity: 1, //线条透明度\n                fillOpacity: 0.5, //填充透明度\n                strokeColor: \"#2b8cbe\", //线条颜色\n                strokeWeight: 1, //线条宽度\n                strokeStyle: \"dashed\", //线样式\n                strokeDasharray: [5, 5], //轮廓的虚线和间隙的样式\n              });\n\n              this.map.add(polygon);\n\n            //叠加热力图\n\n            var heatmap;\n\n            var points = [\n                {\"lng\":108.340429,\"lat\":22.807936,\"count\":80},\n                {\"lng\":108.34691,\"lat\":22.80847,\"count\":90},\n            ];\n\n            // 加载热力图插件\n            this.map.plugin([\"AMap.HeatMap\"],function(){\n            // 在地图对象叠加热力图\n            heatmap = new AMap.Heatmap({map:this.map});\n            // 设置热力图数据集\n            heatmap.setDataSet({data:points,max:100});\n            });\n\n            heatmap.show()\n            //以下可以在地图上叠加各种图层\n            //const traffic = new AMap.TileLayer.Traffic({\n                //autoRefresh: true, //是否自动刷新，默认为false\n                //interval: 10, //刷新间隔，默认180s\n              //});\n              //this.map.add(traffic); //通过add方法添加图层\n\n        }).catch(e=>{\n            console.log(e);\n        })\n    }\n    render(){\n        // 1.创建地图容器\n        return (\n            <div className=\"home_div\">\n                <div className=\"map-title\">\n                    <h3>南宁烟草区域销售情况</h3>\n                </div>\n                <div id=\"mapcontainer\" className=\"map\" style={{ height: '100%' }} />\n            </div>\n          );\n    }\n\n}\nexport default MapComponent;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}